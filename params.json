{"name":"The Morning Mailer","tagline":"A Beautiful HTML Email, delivered to you with the help of Python and the Magic of Cron","body":"Send an email to you every morning, any time of day for that mater, with the important information for your day.\r\n\r\nRead the story of how this project came to be on my website, [tompaulus.com](http://tompaulus.com/journal/software/morning-mailer/)\r\n\r\n***\r\n\r\n### Download/Clone this Repo\r\nTo use this program you will need:\r\n1. Python 2.6 or any later version of Python 2.x\r\n2. A Server to Host your image files, It would be best if this script runs on that server\r\n3. A linux computer/server to execute this script\r\n4. A working SMTP account\r\n\r\nClone The Repo\r\n```\r\n$ git@github.com:tpaulus/MorningMailer.git\r\n```\r\n\r\n### Accounts\r\n#### [Todoist](https://todoist.com/)\r\n_A powerful task manager for personal productivity. Lets you manage tasks from your inbox, browser, desktop, or mobile device. For people who know great accomplishments are built through small daily tasks._\r\n\r\nAll that you need to do is to create an account and start tracking your tasks.\r\n#### [Weather Underground](http://www.wunderground.com/weather/api/)\r\n_The First Internet Weather Service!_\r\nSign up for their free \"ANVIL PLAN\" to get access to their stunning animated Radar Images and accurate weather forecasts. It's free, just don't request data less than 500 times per day, with a max of 10 calls per minute and you will be fine.\r\n\r\n#### [The New York Times](http://developer.nytimes.com/)\r\n_America's Newspaper_\r\nYou will need to request a free API Key for their \"THE TIMES NEWSWIRE API\", again free to use, as long as you don't exceed 5,000 calls pre-day at a max 8 calls per second.\r\n\r\n### Properties File\r\n#### Web URLs\r\nThis script is designed to run on the server that hosts the files that will be displayed in the email.\r\n```\r\nProperty.root_path = ''      # This is the internal path of the folder\r\n                             # were the files that will be displayed in\r\n                             # your emails is.\r\n                             # ex. /home/tompaulu/public_html/img/\r\nProperty.root_web_path = ''  # This is the domain name of your server\r\n                             # plus the folder the images are in.\r\n                             # ex. http://tompaulus.com/img\r\nProperty.news = 'news'       # The name of the folder where the news\r\n                             # pictures are locate. Use the Default\r\nProperty.weather = 'weather' # The name of the folder for the radar.gif map\r\nProperty.header = 'header'   # The name of the folder containing all the\r\n                             # header images\r\n```\r\n\r\n#### API Tokens\r\nThis is where the tokens/API Keys you just got will go. We'll enter your Todoist data in the next step.\r\n```\r\nProperty.wunderground = ''  # Your Anvil API key you got from Weather Underground\r\nProperty.nyt = ''           # Your Newswire API Key from the New York Times\r\n```\r\n\r\n#### Todoist\r\nTodoist lets us login with our username and password to access the data; simply enter it in the appropriate fields. \r\n```\r\nProperty.todoist_email = ''\r\nProperty.todoist_password = ''\r\n```\r\n\r\n#### Email\r\nThe script will send the email to the address you provide it when it has fetched your all data. This is the place where we will enter all that information.\r\n```\r\nProperty.email_to = ''        # Your Email address,\r\n                              # or the one where the email will be sent to\r\nProperty.email_subject = 'Good Morning'  # The Email's Subject\r\nProperty.email_server = ''    # The name of the server that handles your SMTP\r\n                              # ex.  smtp.johndoe.com\r\nProperty.email_port = 0       # The port on which your SMTP server operates.\r\n                              # ex. 25, 465, 587\r\nProperty.email_from = ''      # Who will the email be sent from\r\n                              # Ex. <Python>python@myServer.com\r\nProperty.email_login = ''     # Login Info for the SMTP server, _if required_\r\nProperty.email_password = ''\r\n```\r\n\r\n####  User Info\r\nYour info, used for weather information.\r\n```\r\nProperty.user_TimeZone = ''  # You can leave this blank;\r\n                             # Todoist should know your Time Zone\r\nProperty.user_city = ''      # Enter the city that you live in\r\nProperty.user_state = ''     # Enter the state that you live in \r\n                             # Use the 2 letter abbreviation. ex. CA\r\n```\r\n\r\n#### Server Settings\r\nThe last option is very important!\r\n```\r\nProperty.on_server = True\r\n```\r\nSet this true if running on the server that hosts your files, it enables/disables 'wget' which downlaods the images.\r\n\r\n### Testing\r\nYou can test each of the services by running their scripts. They will either prompt you for a login, or use the information from the properties file.\r\n\r\n### Sending the Email\r\nFirst try ending the email by manually running:\r\n```\r\npython ./main.py\r\n```\r\nIt should run without errors, if there are errors, check to see if the login information is correct. If everything runs; check the email and make sure that all the images and text is correct.\r\n\r\n### CRON\r\nOnce everything works, you can setup an CRON job on your server. Set the time and other options, then tell it to execute this command:\r\n```\r\ncd <location of the cloned repo>; <path for python> ./main.py\r\n```\r\n\r\n### Support or Contact\r\nSubmit an issue and I will try to help fix your problem. This is still a work in progress, but there should be no errors in this repository. \r\n\r\nCheck out my website [http://tompaulus.com](http://tompaulus.com)","google":"UA-23345467-4","note":"Don't delete this file! It's used internally to help with page regeneration."}